#-----------#
# Functions #
#-----------#

# extract funtion for tar,rar,etc

extract ()
{
	if [ -f "$1" ] ; then
		case $1 in
			*.tar.bz2)   tar xjf "$1"     ;;
			*.tar.gz)    tar xzf "$1"     ;;
			*.bz2)       bunzip2 "$1"     ;;
			*.rar)       unrar x "$1"     ;;
			*.gz)        gunzip "$1"      ;;
			*.tar)       tar xf "$1"      ;;
			*.tbz2)      tar xjf "$1"     ;;
			*.tgz)       tar xzf "$1"     ;;
			*.zip)       unzip "$1"       ;;
			*.Z)         uncompress "$1"  ;;
			*.7z)        7z x "$1"        ;;
			*)           echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

log(){
    dmesg | sed '/UFW/d' | grep "$1"
}

man() {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}

 pss() {
    if [ -z "$1" ]; then
        echo -e "usage: pss PATTERN" 
    else
        pids=$(pgrep -d, -f "$1")
        if [ -n "$pids" ]; then
            echo -ne "\033[1;32m"
            ps -Fp "$pids"
            echo -ne "\033[1;0m"
        fi
    fi
 }

 downloadsub() {
    for file in *.mkv; do
        subberthehut -s -n -l por,pob "$file"
    done
 }

 updatedocker() {
    docker compose pull
    docker compose up -d
    yes | docker image prune -a
 }

 redwm() {
   DIRECTORY=/tmp/dwm-6.2
    if [ -d "$DIRECTORY" ]; then
        rm -rf $DIRECTORY
    fi
    cp -r "$HOME/Dotcats/suckless/dwm-6.2" /tmp/
 }

 reslstatus() {
   DIRECTORY=/tmp/slstatus-git
    if [ -d "$DIRECTORY" ]; then
        rm -rf $DIRECTORY
    fi
    cp -r "$HOME/Dotcats/suckless/slstatus-git" /tmp/
 }